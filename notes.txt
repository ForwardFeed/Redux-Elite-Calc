struct Trainer
{
    /*0x00*/ u8 partyFlags;
    /*0x01*/ u8 trainerClass;
    /*0x02*/ u8 encounterMusic_gender; // last bit is gender
    /*0x03*/ u8 trainerPic;
    /*0x04*/ u8 trainerName[12];
    /*0x10*/ u16 items[4];
    /*0x18*/ bool8 doubleBattle;
    /*0x1C*/ u32 aiFlags;
    /*0x20*/ u8 partySize;
    /*0x24*/ union TrainerMonPtr party;
    /*0x20*/ u8 partySizeInsane;
    /*0x28*/ union TrainerMonPtr partyInsane;
    /*0x20*/ u8 partySizeDouble;
    /*0x24*/ union TrainerMonPtr partyDouble;
    /*0x20*/ u8 partySizeInsaneDouble;
    /*0x28*/ union TrainerMonPtr partyInsaneDouble;
};


/ Non-volatile status conditions
// These persist remain outside of battle and after switching out
#define STATUS1_NONE             0
#define STATUS1_SLEEP            (1 << 0 | 1 << 1 | 1 << 2) // First 3 bits (Number of turns to sleep)
#define STATUS1_SLEEP_TURN(num)  ((num) << 0) // Just for readability (or if rearranging statuses)
#define STATUS1_POISON           (1 << 3)
#define STATUS1_BURN             (1 << 4)
#define STATUS1_FREEZE           (1 << 5)
#define STATUS1_PARALYSIS        (1 << 6)
#define STATUS1_TOXIC_POISON     (1 << 7)
#define STATUS1_TOXIC_COUNTER    (1 << 8 | 1 << 9 | 1 << 10 | 1 << 11)
#define STATUS1_TOXIC_TURN(num)  ((num) << 8)
#define STATUS1_FROSTBITE        (1 << 12)
#define STATUS1_PSN_ANY          (STATUS1_POISON | STATUS1_TOXIC_POISON)
#define STATUS1_ANY              (STATUS1_SLEEP | STATUS1_POISON | STATUS1_BURN | STATUS1_FREEZE | STATUS1_PARALYSIS | STATUS1_TOXIC_POISON | STATUS1_FROSTBITE)

// Volatile status ailments
// These are removed after exiting the battle or switching out
#define STATUS2_CONFUSION             (1 << 0 | 1 << 1 | 1 << 2)
#define STATUS2_CONFUSION_TURN(num)   ((num) << 0)
#define STATUS2_FLINCHED              (1 << 3)
#define STATUS2_UPROAR                (1 << 4 | 1 << 5 | 1 << 6)
#define STATUS2_UPROAR_TURN(num)      ((num) << 4)
#define STATUS2_UNUSED                (1 << 7)
#define STATUS2_BIDE                  (1 << 8 | 1 << 9)
#define STATUS2_BIDE_TURN(num)        (((num) << 8) & STATUS2_BIDE)
#define STATUS2_LOCK_CONFUSE          (1 << 10 | 1 << 11) // e.g. Thrash
#define STATUS2_LOCK_CONFUSE_TURN(num)((num) << 10)
#define STATUS2_MULTIPLETURNS         (1 << 12)
#define STATUS2_WRAPPED               (1 << 13)
#define STATUS2_POWDER                (1 << 14)
#define STATUS2_INFATUATION           (1 << 16 | 1 << 17 | 1 << 18 | 1 << 19)  // 4 bits, one for every battler
#define STATUS2_INFATUATED_WITH(battler) (gBitTable[battler] << 16)
#define STATUS2_FOCUS_ENERGY          (1 << 20)
#define STATUS2_TRANSFORMED           (1 << 21)
#define STATUS2_RECHARGE              (1 << 22)
#define STATUS2_RAGE                  (1 << 23)
#define STATUS2_SUBSTITUTE            (1 << 24)
#define STATUS2_DESTINY_BOND          (1 << 25)
#define STATUS2_ESCAPE_PREVENTION     (1 << 26)
#define STATUS2_NIGHTMARE             (1 << 27)
#define STATUS2_CURSED                (1 << 28)
#define STATUS2_FORESIGHT             (1 << 29)
#define STATUS2_DEFENSE_CURL          (1 << 30)
#define STATUS2_TORMENT               (1 << 31)

#define STATUS3_LEECHSEED_BATTLER       (1 << 0 | 1 << 1) // The battler to receive HP from Leech Seed
#define STATUS3_LEECHSEED               (1 << 2)
#define STATUS3_ALWAYS_HITS             (1 << 3 | 1 << 4)
#define STATUS3_ALWAYS_HITS_TURN(num)   (((num) << 3) & STATUS3_ALWAYS_HITS) // "Always Hits" is set as a 2 turn timer, i.e. next turn is the last turn when it's active
#define STATUS3_PERISH_SONG             (1 << 5)
#define STATUS3_ON_AIR                  (1 << 6)
#define STATUS3_UNDERGROUND             (1 << 7)
#define STATUS3_MINIMIZED               (1 << 8)
#define STATUS3_CHARGED_UP              (1 << 9)
#define STATUS3_ROOTED                  (1 << 10)
#define STATUS3_YAWN                    (1 << 11 | 1 << 12) // Number of turns to sleep
#define STATUS3_YAWN_TURN(num)          (((num) << 11) & STATUS3_YAWN)
#define STATUS3_IMPRISONED_OTHERS       (1 << 13)
#define STATUS3_GRUDGE                  (1 << 14)
#define STATUS3_CANT_SCORE_A_CRIT       (1 << 15)
#define STATUS3_GASTRO_ACID             (1 << 16)
#define STATUS3_EMBARGO                 (1 << 17)
#define STATUS3_UNDERWATER              (1 << 18)
#define STATUS3_INTIMIDATE_POKES        (1 << 19)
#define STATUS3_TRACE                   (1 << 20)
#define STATUS3_SMACKED_DOWN            (1 << 21)
#define STATUS3_ME_FIRST                (1 << 22)
#define STATUS3_TELEKINESIS             (1 << 23)
#define STATUS3_PHANTOM_FORCE           (1 << 24)
#define STATUS3_MIRACLE_EYED            (1 << 25)
#define STATUS3_MAGNET_RISE             (1 << 26)
#define STATUS3_HEAL_BLOCK              (1 << 27)
#define STATUS3_AQUA_RING               (1 << 28)
#define STATUS3_LASER_FOCUS             (1 << 29)
#define STATUS3_POWER_TRICK             (1 << 30)
#define STATUS3_SEMI_INVULNERABLE       (STATUS3_UNDERGROUND | STATUS3_ON_AIR | STATUS3_UNDERWATER | STATUS3_PHANTOM_FORCE)

#define STATUS4_ELECTRIFIED             (1 << 0)
#define STATUS4_PLASMA_FISTS            (1 << 1)
#define STATUS4_COILED                  (1 << 2)

struct SaveBlock1
{
    /*0x00*/ struct Coords16 pos;
    /*0x04*/ struct WarpData location;
    /*0x0C*/ struct WarpData continueGameWarp;
    /*0x14*/ struct WarpData dynamicWarp;
    /*0x1C*/ struct WarpData lastHealLocation; // used by white-out and teleport
    /*0x24*/ struct WarpData escapeWarp; // used by Dig and Escape Rope
    /*0x2C*/ u16 savedMusic;
    /*0x2E*/ u8 weather;
    /*0x2F*/ u8 weatherCycleStage;
    /*0x30*/ u8 flashLevel;
    /*0x32*/ u16 mapLayoutId;
    /*0x34*/ u16 mapView[0x100];
    /*0x234*/ u8 playerPartyCount;
    /*0x238*/ struct Pokemon playerParty[PARTY_SIZE];
    /*0x490*/ u32 money;
    /*0x494*/ u16 coins;
    /*0x496*/ u16 registeredItemSelect; // registered for use with SELECT button
    /*0x498*/ struct ItemSlot pcItems[PC_ITEMS_COUNT];
    /*0x560*/ struct ItemSlot bagPocket_Items[BAG_ITEMS_COUNT];
    /*0x5D8*/ struct ItemSlot bagPocket_KeyItems[BAG_KEYITEMS_COUNT];
    /*0x650*/ struct ItemSlot bagPocket_PokeBalls[BAG_POKEBALLS_COUNT];
    /*0x690*/ struct ItemSlot bagPocket_TMHM[BAG_TMHM_COUNT];
    /*0x790*/ struct ItemSlot bagPocket_Berries[BAG_BERRIES_COUNT];
    /*0x650*/ struct ItemSlot bagPocket_Medicine[BAG_MEDICINE_COUNT];
    /*0x690*/ struct ItemSlot bagPocket_Battle[BAG_BATTLE_COUNT];
    /*0x790*/ struct ItemSlot bagPocket_MegaStones[BAG_MEGASTONES_COUNT];//Unused
    /*0x848*/ struct Pokeblock pokeblocks[POKEBLOCKS_COUNT];
    /*0x9BC*/ u16 berryBlenderRecords[3];
    /*0x9C2*/ u8 field_9C2[6];
    /*0x9C8*/ u16 trainerRematchStepCounter;
    /*0x9CA*/ u8 trainerRematches[MAX_REMATCH_ENTRIES];
    /*0xA30*/ struct ObjectEvent objectEvents[OBJECT_EVENTS_COUNT];
    /*0xC70*/ struct ObjectEventTemplate objectEventTemplates[OBJECT_EVENT_TEMPLATES_COUNT];
    /*0x1270*/ u8 flags[NUM_FLAG_BYTES];
    /*0x139C*/ u16 vars[VARS_COUNT];
    /*0x159C*/ u32 gameStats[NUM_GAME_STATS];
    /*0x169C*/ struct BerryTree berryTrees[BERRY_TREES_COUNT];
    /*0x1A9C*/ struct SecretBase secretBases[SECRET_BASES_COUNT];
    /*0x271C*/ u8 playerRoomDecorations[DECOR_MAX_PLAYERS_HOUSE];
    /*0x2728*/ u8 playerRoomDecorationPositions[DECOR_MAX_PLAYERS_HOUSE];
    /*0x2734*/ u8 decorationDesks[10];
    /*0x273E*/ u8 decorationChairs[10];
    /*0x2748*/ u8 decorationPlants[10];
    /*0x2752*/ u8 decorationOrnaments[30];
    /*0x2770*/ u8 decorationMats[30];
    /*0x278E*/ u8 decorationPosters[10];
    /*0x2798*/ u8 decorationDolls[40];
    /*0x27C0*/ u8 decorationCushions[10];
    /*0x27CA*/ u8 padding_27CA[2];
    /*0x27CC*/ TVShow tvShows[TV_SHOWS_COUNT];
    /*0x2B50*/ PokeNews pokeNews[POKE_NEWS_COUNT];
    /*0x2B90*/ u16 outbreakPokemonSpecies;
    /*0x2B92*/ u8 outbreakLocationMapNum;
    /*0x2B93*/ u8 outbreakLocationMapGroup;
    /*0x2B94*/ u8 outbreakPokemonLevel;
    /*0x2B95*/ u8 outbreakUnk1;
    /*0x2B96*/ u16 outbreakUnk2;
    /*0x2B98*/ u16 outbreakPokemonMoves[MAX_MON_MOVES];
    /*0x2BA0*/ u8 outbreakUnk4;
    /*0x2BA1*/ u8 outbreakPokemonProbability;
    /*0x2BA2*/ u16 outbreakDaysLeft;
    /*0x2BA4*/ struct GabbyAndTyData gabbyAndTyData;
    /*0x2BB0*/ u16 easyChatProfile[EASY_CHAT_BATTLE_WORDS_COUNT];
    /*0x2BBC*/ u16 easyChatBattleStart[EASY_CHAT_BATTLE_WORDS_COUNT];
    /*0x2BC8*/ u16 easyChatBattleWon[EASY_CHAT_BATTLE_WORDS_COUNT];
    /*0x2BD4*/ u16 easyChatBattleLost[EASY_CHAT_BATTLE_WORDS_COUNT];
    /*0x2BE0*/ struct MailStruct mail[MAIL_COUNT];
    /*0x2E20*/ u8 additionalPhrases[8]; // bitfield for 33 additional phrases in easy chat system
    /*0x2E28*/ OldMan oldMan;
    /*0x2e64*/ struct DewfordTrend dewfordTrends[SAVED_TRENDS_COUNT];
    /*0x2e90*/ struct ContestWinner contestWinners[NUM_CONTEST_WINNERS]; // see CONTEST_WINNER_*
    /*0x3030*/ struct DayCare daycare;
    /*0x3150*/ struct LinkBattleRecords linkBattleRecords;
    /*0x31A8*/ u8 giftRibbons[GIFT_RIBBONS_COUNT];
    /*0x31B3*/ struct ExternalEventData externalEventData;
    /*0x31C7*/ struct ExternalEventFlags externalEventFlags;
    /*0x31DC*/ struct Roamer roamer;
    /*0x31F8*/ struct EnigmaBerry enigmaBerry;
    /*0x322C*/ struct MEventBuffers unk_322C;
    /*0x3???*/ u8 dexSeen[DEX_FLAGS_NO];
    /*0x3???*/ u8 dexCaught[DEX_FLAGS_NO];
    /*0x3???*/ u32 trainerHillTimes[4];
    /*0x3???*/ struct RamScript ramScript;
    /*0x3???*/ struct RecordMixingGift recordMixingGift;
    /*0x3???*/ LilycoveLady lilycoveLady;
    /*0x3???*/ struct TrainerNameRecord trainerNameRecords[20];
    /*0x3???*/ u8 registeredTexts[UNION_ROOM_KB_ROW_COUNT][21];
    /*0x3???*/ struct SaveTrainerHill trainerHill;
    /*0x3???*/ struct WaldaPhrase waldaPhrase;
    /*0x3???*/ struct BoxPokemon kyuremFusedMon;
    /*0x3???*/ struct BoxPokemon necrozmaFusedMon;
    /*0x3???*/ struct BoxPokemon calyrexFusedMon;
                u8 dexNavChain;
                u8 registeredItemLastSelected:4; //max 16 items
                u8 registeredItemListCount:4;
                struct RegisteredItemSlot registeredItems[REGISTERED_ITEMS_MAX];
    // sizeof: 0x3???
};



struct SaveBlock2
{
    /*0x00*/ u8 playerName[PLAYER_NAME_LENGTH + 1];
    /*0x08*/ u8 playerGender; // MALE, FEMALE
    /*0x09*/ u8 specialSaveWarpFlags;
    /*0x0A*/ u8 playerTrainerId[TRAINER_ID_LENGTH];
    /*0x0E*/ u16 playTimeHours;
    /*0x10*/ u8 playTimeMinutes;
    /*0x11*/ u8 playTimeSeconds;
    /*0x12*/ u8 playTimeVBlanks;
    /*0x13*/ u8 optionsButtonMode;  // OPTIONS_BUTTON_MODE_[NORMAL/LR/L_EQUALS_A]
    /*0x14*/ u16 optionsTextSpeed:3; // OPTIONS_TEXT_SPEED_[SLOW/MID/FAST]
             u16 optionsWindowFrameType:5; // Specifies one of the 20 decorative borders for text boxes
             u16 optionsSound:1; // OPTIONS_SOUND_[MONO/STEREO]
             u16 optionsBattleStyle:1; // OPTIONS_BATTLE_STYLE_[SHIFT/SET]
             u16 optionsBattleSceneOff:1; // whether battle animations are disabled
             u16 regionMapZoom:1; // whether the map is zoomed in
             u16 gameDifficulty:4; // Which difficulty the player chose (Normal/Hard/Challenge/Insanity, with Normal being 0)
    /*0x18*/ struct Pokedex pokedex;
    /*0x90*/ u8 filler_90[6]; //To Delete
             u8 levelCaps; // Various options for level caps
             u16 autoRun:1;  //1
             u16 permanentRepel:1; //2
             u16 damageDone:1; // 4
             u16 askForNickname:1; // 8
             u16 shinyrate:2; // 32 16
             u16 enableEvs:1; // 64
             u16 playerAI:1; // 8 //128
             u16 individualColors:1; 
             u16 doubleBattleMode:1; // 10 
    /*0x98*/ struct Time localTimeOffset;
    /*0xA0*/ struct Time lastBerryTreeUpdate;
    /*0xA8*/ u32 gcnLinkFlags; // Read by Pokemon Colosseum/XD
    /*0xAC*/ u32 encryptionKey;
    /*0xB0*/ struct PlayersApprentice playerApprentice;
    /*0xDC*/ struct Apprentice apprentices[APPRENTICE_COUNT];
    /*0x1EC*/ struct BerryCrush berryCrush;
    /*0x1FC*/ struct PokemonJumpRecords pokeJump;
    /*0x20C*/ struct BerryPickingResults berryPick;
    /*0x21C*/ struct RankingHall1P hallRecords1P[HALL_FACILITIES_COUNT][2][3]; // From record mixing.
    /*0x57C*/ struct RankingHall2P hallRecords2P[2][3]; // From record mixing.
    /*0x624*/ u16 contestLinkResults[CONTEST_CATEGORIES_COUNT][CONTESTANT_COUNT];
    /*0x64C*/ struct BattleFrontier frontier;
    /*0xF30*/ u8 innaterandomizedMode:1; //1
              u8 encounterRandomizedMode:1; //2
              u8 abilityRandomizedMode:1; //4
              u8 moveRandomizedMode:1; // 8
              u8 typeRandomizedMode:1; // 16
              u8 encounterRandomizedLegendaryMode:1; //32
              u8 filler:2; // 64 // 128
}; // sizeof=0xF31


   #define MOVE_RESULT_MISSED             (1 << 0)
   #define MOVE_RESULT_SUPER_EFFECTIVE    (1 << 1)
   #define MOVE_RESULT_NOT_VERY_EFFECTIVE (1 << 2)
   #define MOVE_RESULT_DOESNT_AFFECT_FOE  (1 << 3)
   #define MOVE_RESULT_ONE_HIT_KO         (1 << 4)
   #define MOVE_RESULT_FAILED             (1 << 5)
   #define MOVE_RESULT_FOE_ENDURED        (1 << 6)
   #define MOVE_RESULT_FOE_HUNG_ON        (1 << 7)
   #define MOVE_RESULT_STURDIED           (1 << 8)
   #define MOVE_RESULT_NO_EFFECT          (MOVE_RESULT_MISSED | MOVE_RESULT_DOESNT_AFFECT_FOE | MOVE_RESULT_FAILED)



   if (!(gMoveResultFlags & MOVE_RESULT_NO_EFFECT)
        && gBattleMoves[gCurrentMove].power != 0
        && (gLastHitBy[gBattlerTarget] == 0xFF || gLastHitBy[gBattlerTarget] == gBattlerAttacker)
        && gBattleStruct->moveTarget[gBattlerAttacker] == gBattlerTarget
        && gBattlerTarget != gBattlerAttacker
        && gCurrentTurnActionNumber == GetBattlerTurnOrderNum(gBattlerAttacker)
        && (gChosenMove == gChosenMoveByBattler[gBattlerAttacker] || gChosenMove == gBattleMons[gBattlerAttacker].moves[gChosenMovePos]))
        return TRUE;


void (* const gBattleScriptingCommandsTable[])(void) =
{
Cmd_attackcanceler,                          //0x0
Cmd_accuracycheck,                           //0x1
Cmd_attackstring,                            //0x2
Cmd_ppreduce,                                //0x3
Cmd_critcalc,                                //0x4
Cmd_damagecalc,                              //0x5
Cmd_typecalc,                                //0x6
Cmd_adjustdamage,                            //0x7
Cmd_multihitresultmessage,                   //0x8
Cmd_attackanimation,                         //0x9
Cmd_waitanimation,                           //0xA
Cmd_healthbarupdate,                         //0xB
Cmd_datahpupdate,                            //0xC
Cmd_critmessage,                             //0xD
Cmd_effectivenesssound,                      //0xE
Cmd_resultmessage,                           //0xF
Cmd_printstring,                             //0x10
Cmd_printselectionstring,                    //0x11
Cmd_waitmessage,                             //0x12
Cmd_printfromtable,                          //0x13
Cmd_printselectionstringfromtable,           //0x14
Cmd_seteffectwithchance,                     //0x15
Cmd_seteffectprimary,                        //0x16
Cmd_seteffectsecondary,                      //0x17
Cmd_clearstatusfromeffect,                   //0x18
Cmd_tryfaintmon,                             //0x19
Cmd_dofaintanimation,                        //0x1A
Cmd_cleareffectsonfaint,                     //0x1B
Cmd_jumpifstatus,                            //0x1C
Cmd_jumpifstatus2,                           //0x1D
Cmd_jumpifability,                           //0x1E
Cmd_jumpifsideaffecting,                     //0x1F
Cmd_jumpifstat,                              //0x20
Cmd_jumpifstatus3condition,                  //0x21
Cmd_jumpbasedontype,                         //0x22
Cmd_getexp,                                  //0x23
Cmd_checkteamslost,                          //0x24
Cmd_movevaluescleanup,                       //0x25
Cmd_setmultihit,                             //0x26
Cmd_decrementmultihit,                       //0x27
Cmd_goto,                                    //0x28
Cmd_jumpifbyte,                              //0x29
Cmd_jumpifhalfword,                          //0x2A
Cmd_jumpifword,                              //0x2B
Cmd_jumpifarrayequal,                        //0x2C
Cmd_jumpifarraynotequal,                     //0x2D
Cmd_setbyte,                                 //0x2E
Cmd_addbyte,                                 //0x2F
Cmd_subbyte,                                 //0x30
Cmd_copyarray,                               //0x31
Cmd_copyarraywithindex,                      //0x32
Cmd_orbyte,                                  //0x33
Cmd_orhalfword,                              //0x34
Cmd_orword,                                  //0x35
Cmd_bicbyte,                                 //0x36
Cmd_bichalfword,                             //0x37
Cmd_bicword,                                 //0x38
Cmd_pause,                                   //0x39
Cmd_waitstate,                               //0x3A
Cmd_healthbar_update,                        //0x3B
Cmd_return,                                  //0x3C
Cmd_end,                                     //0x3D
Cmd_end2,                                    //0x3E
Cmd_end3,                                    //0x3F
Cmd_jumpifaffectedbyprotect,                 //0x40
Cmd_call,                                    //0x41
Cmd_setroost,                                //0x42
Cmd_jumpifabilitypresent,                    //0x43
Cmd_endselectionscript,                      //0x44
Cmd_playanimation,                           //0x45
Cmd_playanimation2,                          //0x46
Cmd_setgraphicalstatchangevalues,            //0x47
Cmd_playstatchangeanimation,                 //0x48
Cmd_moveend,                                 //0x49
Cmd_sethealblock,                            //0x4A
Cmd_returnatktoball,                         //0x4B
Cmd_getswitchedmondata,                      //0x4C
Cmd_switchindataupdate,                      //0x4D
Cmd_switchinanim,                            //0x4E
Cmd_jumpifcantswitch,                        //0x4F
Cmd_openpartyscreen,                         //0x50
Cmd_switchhandleorder,                       //0x51
Cmd_switchineffects,                         //0x52
Cmd_trainerslidein,                          //0x53
Cmd_playse,                                  //0x54
Cmd_fanfare,                                 //0x55
Cmd_playfaintcry,                            //0x56
Cmd_endlinkbattle,                           //0x57
Cmd_returntoball,                            //0x58
Cmd_handlelearnnewmove,                      //0x59
Cmd_yesnoboxlearnmove,                       //0x5A
Cmd_yesnoboxstoplearningmove,                //0x5B
Cmd_hitanimation,                            //0x5C
Cmd_getmoneyreward,                          //0x5D
Cmd_unknown_5E,                              //0x5E
Cmd_swapattackerwithtarget,                  //0x5F
Cmd_incrementgamestat,                       //0x60
Cmd_drawpartystatussummary,                  //0x61
Cmd_hidepartystatussummary,                  //0x62
Cmd_jumptocalledmove,                        //0x63
Cmd_statusanimation,                         //0x64
Cmd_status2animation,                        //0x65
Cmd_chosenstatusanimation,                   //0x66
Cmd_yesnobox,                                //0x67
Cmd_cancelallactions,                        //0x68
Cmd_setgravity,                              //0x69
Cmd_removeitem,                              //0x6A
Cmd_atknameinbuff1,                          //0x6B
Cmd_drawlvlupbox,                            //0x6C
Cmd_resetsentmonsvalue,                      //0x6D
Cmd_setatktoplayer0,                         //0x6E
Cmd_makevisible,                             //0x6F
Cmd_recordability,                           //0x70
Cmd_buffermovetolearn,                       //0x71
Cmd_jumpifplayerran,                         //0x72
Cmd_hpthresholds,                            //0x73
Cmd_hpthresholds2,                           //0x74
Cmd_useitemonopponent,                       //0x75
Cmd_various,                                 //0x76
Cmd_setprotectlike,                          //0x77
Cmd_faintifabilitynotdamp,                   //0x78
Cmd_setatkhptozero,                          //0x79
Cmd_jumpifnexttargetvalid,                   //0x7A
Cmd_tryhealhalfhealth,                       //0x7B
Cmd_trymirrormove,                           //0x7C
Cmd_setrain,                                 //0x7D
Cmd_setreflect,                              //0x7E
Cmd_setseeded,                               //0x7F
Cmd_manipulatedamage,                        //0x80
Cmd_trysetrest,                              //0x81
Cmd_jumpifnotfirstturn,                      //0x82
Cmd_setmiracleeye,                           //0x83
Cmd_jumpifcantmakeasleep,                    //0x84
Cmd_stockpile,                               //0x85
Cmd_stockpiletobasedamage,                   //0x86
Cmd_stockpiletohpheal,                       //0x87
Cmd_checkcondition,                          //0x88
Cmd_statbuffchange,                          //0x89
Cmd_normalisebuffs,                          //0x8A
Cmd_setbide,                                 //0x8B
Cmd_confuseifrepeatingattackends,            //0x8C
Cmd_setmultihitcounter,                      //0x8D
Cmd_initmultihitstring,                      //0x8E
Cmd_forcerandomswitch,                       //0x8F
Cmd_tryconversiontypechange,                 //0x90
Cmd_givepaydaymoney,                         //0x91
Cmd_setlightscreen,                          //0x92
Cmd_battlemacros,                              //0x93
Cmd_jumpifabilityonside,                     //0x94
Cmd_setsandstorm,                            //0x95
Cmd_weatherdamage,                           //0x96
Cmd_tryinfatuating,                          //0x97
Cmd_updatestatusicon,                        //0x98
Cmd_setmist,                                 //0x99
Cmd_setfocusenergy,                          //0x9A
Cmd_transformdataexecution,                  //0x9B
Cmd_setsubstitute,                           //0x9C
Cmd_mimicattackcopy,                         //0x9D
Cmd_metronome,                               //0x9E
Cmd_calculatesetdamage,                      //0x9F
Cmd_trytoapplymoveeffect,                    //0xA0
Cmd_counterdamagecalculator,                 //0xA1
Cmd_mirrorcoatdamagecalculator,              //0xA2
Cmd_disablelastusedattack,                   //0xA3
Cmd_trysetencore,                            //0xA4
Cmd_painsplitdmgcalc,                        //0xA5
Cmd_settypetorandomresistance,               //0xA6
Cmd_setalwayshitflag,                        //0xA7
Cmd_copymovepermanently,                     //0xA8
Cmd_trychoosesleeptalkmove,                  //0xA9
Cmd_setdestinybond,                          //0xAA
Cmd_trysetdestinybondtohappen,               //0xAB
Cmd_settailwind,                             //0xAC
Cmd_tryspiteppreduce,                        //0xAD
Cmd_healpartystatus,                         //0xAE
Cmd_cursetarget,                             //0xAF
Cmd_trysetspikes,                            //0xB0
Cmd_setforesight,                            //0xB1
Cmd_trysetperishsong,                        //0xB2
Cmd_handlerollout,                           //0xB3
Cmd_jumpifconfusedandstatmaxed,              //0xB4
Cmd_handlefurycutter,                        //0xB5
Cmd_setembargo,                              //0xB6
Cmd_presentdamagecalculation,                //0xB7
Cmd_setsafeguard,                            //0xB8
Cmd_magnitudedamagecalculation,              //0xB9
Cmd_jumpifnopursuitswitchdmg,                //0xBA
Cmd_setsunny,                                //0xBB
Cmd_maxattackhalvehp,                        //0xBC
Cmd_copyfoestats,                            //0xBD
Cmd_rapidspinfree,                           //0xBE
Cmd_setdefensecurlbit,                       //0xBF
Cmd_recoverbasedonsunlight,                  //0xC0
Cmd_setstickyweb,                            //0xC1
Cmd_selectfirstvalidtarget,                  //0xC2
Cmd_trysetfutureattack,                      //0xC3
Cmd_trydobeatup,                             //0xC4
Cmd_setsemiinvulnerablebit,                  //0xC5
Cmd_clearsemiinvulnerablebit,                //0xC6
Cmd_setminimize,                             //0xC7
Cmd_sethail,                                 //0xC8
Cmd_jumpifattackandspecialattackcannotfall,  //0xC9
Cmd_setforcedtarget,                         //0xCA
Cmd_setcharge,                               //0xCB
Cmd_callterrainattack,                       //0xCC
Cmd_cureifburnedparalysedorpoisoned,         //0xCD
Cmd_settorment,                              //0xCE
Cmd_jumpifnodamage,                          //0xCF
Cmd_settaunt,                                //0xD0
Cmd_trysethelpinghand,                       //0xD1
Cmd_tryswapitems,                            //0xD2
Cmd_trycopyability,                          //0xD3
Cmd_trywish,                                 //0xD4
Cmd_settoxicspikes,                          //0xD5
Cmd_setgastroacid,                           //0xD6
Cmd_setyawn,                                 //0xD7
Cmd_setdamagetohealthdifference,             //0xD8
Cmd_setroom,                                 //0xD9
Cmd_tryswapabilities,                        //0xDA
Cmd_tryimprison,                             //0xDB
Cmd_setstealthrock,                          //0xDC
Cmd_setuserstatus3,                          //0xDD
Cmd_assistattackselect,                      //0xDE
Cmd_trysetmagiccoat,                         //0xDF
Cmd_trysetsnatch,                            //0xE0
Cmd_trygetintimidatetarget,                  //0xE1
Cmd_switchoutabilities,                      //0xE2
Cmd_jumpifhasnohp,                           //0xE3
Cmd_getsecretpowereffect,                    //0xE4
Cmd_pickup,                                  //0xE5
Cmd_docastformchangeanimation,               //0xE6
Cmd_trycastformdatachange,                   //0xE7
Cmd_settypebasedhalvers,                     //0xE8
Cmd_jumpifsubstituteblocks,                  //0xE9
Cmd_tryrecycleitem,                          //0xEA
Cmd_settypetoterrain,                        //0xEB
Cmd_pursuitrelated,                          //0xEC
Cmd_snatchsetbattlers,                       //0xED
Cmd_removelightscreenreflect,                //0xEE
Cmd_handleballthrow,                         //0xEF
Cmd_givecaughtmon,                           //0xF0
Cmd_trysetcaughtmondexflags,                 //0xF1
Cmd_displaydexinfo,                          //0xF2
Cmd_trygivecaughtmonnick,                    //0xF3
Cmd_subattackerhpbydmg,                      //0xF4
Cmd_removeattackerstatus1,                   //0xF5
Cmd_finishaction,                            //0xF6
Cmd_finishturn,                              //0xF7
Cmd_trainerslideout,                         //0xF8
Cmd_settelekinesis,                          //0xF9
Cmd_swapstatstages,                          //0xFA
Cmd_averagestats,                            //0xFB
Cmd_jumpifoppositegenders,                   //0xFC
Cmd_trygetbaddreamstarget,                   //0xFD
Cmd_tryworryseed,                            //0xFE
Cmd_metalburstdamagecalculator,              //0xFF
};